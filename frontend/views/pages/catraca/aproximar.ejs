
<style>
 @import url('https://fonts.googleapis.com/css2?family=Bebas+Neue&family=Fira+Sans:ital,wght@0,500;1,500&family=Merriweather+Sans&display=swap');

.fonte-personalizada{
  font-family: 'Bebas Neue', sans-serif;
}

  </style>

<body>
    <div class="container custom-shadow  rounded-5  ">
        <h4 class="mt-5 rounded-5" id="data-e-hora"></h4>
        <h1 class="fonte-personalizada">APROXIME O CARTÃO</h1>
        <img src="/img/aproximar.png" >
        <h6 class="fonte-personalizada">Linha 115</h6>
        <p class="fonte-personalizada">www.SmartBus.com.br</p>
       

        <script>
          function mostrarDataHora() {
            const elementoDataHora = document.getElementById("data-e-hora");
            elementoDataHora.style.color = "#eaeaea"; // Define a cor principal do Bootstrap
            elementoDataHora.style.fontFamily = "Inria Sans, sans-serif"; // Define a fonte do Bootstrap
            elementoDataHora.style.fontWeight = "bold"; // Define o peso da fonte como negrito
            function atualizarDataHora() {
              const data = new Date();
              const dataFormatada = data.toLocaleDateString();
              const horaFormatada = data.toLocaleTimeString();
              elementoDataHora.textContent = `Data: ${dataFormatada} - Hora: ${horaFormatada}`;
            }
            setInterval(atualizarDataHora, 1000); // Atualiza a cada segundo
            atualizarDataHora(); // Para exibir imediatamente
          }

          mostrarDataHora();
        </script>
      </div>
    </div>

    <input type="text" name="clienteId" id="clienteId" placeholder="Informar o código do cartão." onchange="lerCartao()">
   
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    
    <script defer src="/js/app/aguardando.js"></script>

<script>
  const lerCartao = async () => {
    try {
      // Obtenha o valor do input
      const clienteId = inputClienteId.value;
      
      // Faça a solicitação POST usando Axios
      const url = "http://localhost:5000/cliente/liberar";
      const data = { clienteId };
      const response = await axios.post(url, data);
  
      console.log(response.data);
      
      // Se a solicitação for bem-sucedida, redirecione para a página de sucesso
      window.location.href = "http://localhost:3000/catraca/liberado";
    } catch (error) {
      console.error("Erro ao cadastrar embarque:", error);
  
      // Se o erro for relacionado ao cliente não encontrado, redirecione para a página de aviso indicando a causa
      if (error.response && error.response.status === 404) {
        window.location.href = "http://localhost:3000/catraca/error";
      } else if (error.response && error.response.status === 402) {
        // Se o erro for relacionado a saldo insuficiente, redirecione para a página de aviso indicando a causa
        window.location.href = "http://localhost:3000/catraca/semsaldo";
      } else {
        // Para outros erros, redirecione para a página de erro
        window.location.href = "http://localhost:3000/catraca/error";
      }
    }
  };
  
  const inputClienteId = document.querySelector("#clienteId");
  inputClienteId.focus();
</script>


</body>

